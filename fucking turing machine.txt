// ------------------------------------------------------------------------------- \\
// Supertos Industries ( 2012 - 2023 )
// ------------------------------------------------------------------------------- \\
// Author: Supertos
// Year: 2023
// Version: Rev.3
// ------------------------------------------------------------------------------- \\
// OR LOGICAL UNIT
// ------------------------------------------------------------------------------- \\

// ====================================================================================== \\
// DOCUMENT MAP:
// 000 - 099 INITIALIZATION 											+-INITIALIZATION
//
// 100 - 101 READ FIRST BIT OF A OPERAND 									+
// 200 - 299 SKIP OPERAND A 											|
// 300 - 399 READ FIRST BIT OF B OPERAND 									|-FIRST BIT PROCESSING
// 400 - 499 SKIP OPERAND B 											|
// 500 - 599 INSERT FIRST OUT BIT 										+
//
// 600 - 699 RETURN BACK TO OPERAND A 										+
// 700 - 799 RETURN BIT TO A, GET NEXT BIT 									|
// 800 - 899 SKIP OPERAND A 											|
// 900 - 999 SKIP OPERAND B LEFTOVERS, RETURN BIT TO B, GET NEXT BIT 						|-MAIN FLOW
// 1000 - 1099 SKIP OPERAND B LEFTOVERS 									|
// 1100 - 1199 SKIP UNFINISHED RESULT, PASTE BIT AND RETURN TO 600-699 						+
//
// 1200 - 1299 EXIT LOOP 											+-FINALIZATION
//
// 1800 - 1899 S-CASE: OPERAND B LONGER THAN OPERAND A 
// 1900 - 1999 S-CASE: OPERAND A LONGER THAN OPERAND B
// ====================================================================================== \\

// ====================================================================================== \\
// COMPILATION DATA:
// REDACTOR: NOTEPAD++
// OS: WINDOWS 10 LTSC
// LANGUAGE: TURING'S MACHINE
// DATE: 28.10.2023 ( 10/28/23 )
// ====================================================================================== \\

// ====================================================================================== \\
// VERSION HISTORY:
// 1.0 - Initial Version ( Accidently Deleted )
// Rev.2 - Rewrite from scratch
// Rev.3 - XOR changed to OR, ignore missing bits, ignore leading 0
// ====================================================================================== \\

// ======================== ( 000 - 099 INITIALIZATION ) ======================== \\

000, ,<,001 // MOVE LEFT ( CARRY A: NIL CARRY B: NIL )

001,0,<,001 // MOVE TO THE START OF OPERAND B ( CARRY A: NIL CARRY B: NIL )
001,1,<,001
001, ,<,002

002,0,<,002 // MOVE TO THE START OF OPERAND A ( CARRY A: NIL CARRY B: NIL )
002,1,<,002
002, ,>,101

// ======================== ( 100 - 199 READ FIRST BIT OF A OPERAND ) ======================== \\

101,0, ,111 // READ BIT AND REPLACE IT WITH WHITESPACE ( CARRY A: NIL CARRY B: NIL )
101,1, ,112

111, ,>,201 // MOVE RIGHT ( CARRY A: 0 CARRY B: NIL )

112, ,>,202 // MOVE RIGHT ( CARRY A: 1 CARRY B: NIL )

// ======================== ( 200 - 299 SKIP OPERAND A ) ======================== \\

201,0,>,201 // READ BIT ( CARRY A: 0 CARRY B: NIL )
201,1,>,201
201, ,>,301

202,0,>,202 // READ BIT ( CARRY A: 1 CARRY B: NIL )
202,1,>,202
202, ,>,302

// ======================== ( 300 - 399 READ FIRST BIT OF B OPERAND ) ======================== \\

301,0, ,311 // READ BIT ( CARRY A: 0 CARRY B: NIL )
301,1, ,312

302,0, ,313 // READ BIT ( CARRY A: 1 CARRY B: NIL )
302,1, ,314

311, ,>,401 // MOVE RIGHT AND REPLACE IT WITH WHITESPACE ( CARRY A: 0 CARRY B: 0 )

312, ,>,402 // MOVE RIGHT AND REPLACE IT WITH WHITESPACE ( CARRY A: 0 CARRY B: 1 )

313, ,>,403 // MOVE RIGHT AND REPLACE IT WITH WHITESPACE ( CARRY A: 1 CARRY B: 0 )

314, ,>,404 // MOVE RIGHT AND REPLACE IT WITH WHITESPACE ( CARRY A: 1 CARRY B: 1 )

// ======================== ( 400 - 499 SKIP OPERAND B ) ======================== \\

401,0,>,401 // READ BIT ( CARRY A: 0 CARRY B: 0 )
401,1,>,401
401, ,>,501

402,0,>,402 // READ BIT ( CARRY A: 0 CARRY B: 1 )
402,1,>,402
402, ,>,502

403,0,>,403 // READ BIT ( CARRY A: 1 CARRY B: 0 )
403,1,>,403
403, ,>,503

404,0,>,404 // READ BIT ( CARRY A: 1 CARRY B: 1 )
404,1,>,404
404, ,>,504

// ======================== ( 500 - 599 INSERT FIRST OUT BIT ) ======================== \\

501, ,<,601 // INSERT BIT ( CARRY A: 0 CARRY B: 0 ) ( WE'RE UNABLE TO PRINT 0 )

502, ,1,602 // INSERT BIT ( CARRY A: 0 CARRY B: 1 )

503, ,1,603 // INSERT BIT ( CARRY A: 1 CARRY B: 0 )

504, ,1,604 // INSERT BIT ( CARRY A: 1 CARRY B: 1 )

// ======================== ( 600 - 699 RETURN BACK TO OPERAND A ) ======================== \\

601,0,<,601 // GO BACK TO THE END OF OPERAND B ( CARRY A: 0 CARRY B: 0 )
601,1,<,601
601, ,<,611

602,0,<,602 // GO BACK TO THE END OF OPERAND B ( CARRY A: 0 CARRY B: 1 )
602,1,<,602
602, ,<,612

603,0,<,603 // GO BACK TO THE END OF OPERAND B ( CARRY A: 1 CARRY B: 0 )
603,1,<,603
603, ,<,613

604,0,<,604 // GO BACK TO THE END OF OPERAND B ( CARRY A: 1 CARRY B: 1 )
604,1,<,604
604, ,<,614

611,0,<,611 // GO BACK TO THE WHITESPACE INSIDE OPERAND B ( CARRY A: 0 CARRY B: 0 )
611,1,<,611
611, ,<,621

612,0,<,612 // GO BACK TO THE WHITESPACE INSIDE OPERAND B ( CARRY A: 0 CARRY B: 1 )
612,1,<,612
612, ,<,622

613,0,<,613 // GO BACK TO THE WHITESPACE INSIDE OPERAND B ( CARRY A: 1 CARRY B: 0 )
613,1,<,613
613, ,<,623

614,0,<,614 // GO BACK TO THE WHITESPACE INSIDE OPERAND B ( CARRY A: 1 CARRY B: 1 )
614,1,<,614
614, ,<,624

621,0,<,621 // GO BACK TO THE START OF OPERAND B ( CARRY A: 0 CARRY B: 0 )
621,1,<,621
621, ,<,631

622,0,<,622 // GO BACK TO THE START OF OPERAND B ( CARRY A: 0 CARRY B: 1 )
622,1,<,622
622, ,<,632

623,0,<,623 // GO BACK TO THE START OF OPERAND B ( CARRY A: 1 CARRY B: 0 )
623,1,<,623
623, ,<,633

624,0,<,624 // GO BACK TO THE START OF OPERAND B ( CARRY A: 1 CARRY B: 1 )
624,1,<,624
624, ,<,634

631,0,<,631 // GO BACK TO THE WHITESPACE INSIDE OPERAND A ( CARRY A: 0 CARRY B: 0 )
631,1,<,631
631, ,=,701

632,0,<,632 // GO BACK TO THE WHITESPACE INSIDE OPERAND A ( CARRY A: 0 CARRY B: 1 )
632,1,<,632
632, ,=,702

633,0,<,633 // GO BACK TO THE WHITESPACE INSIDE OPERAND A ( CARRY A: 1 CARRY B: 0 )
633,1,<,633
633, ,=,703

634,0,<,634 // GO BACK TO THE WHITESPACE INSIDE OPERAND A ( CARRY A: 1 CARRY B: 1 )
634,1,<,634
634, ,=,704

// ======================== ( 700 - 799 RETURN BIT TO A, GET NEXT BIT ) ======================== \\

701, ,0,711 // RETURN BIT TO OPERAND A ( CARRY A: 0 CARRY B: 0 )

702, ,0,712 // RETURN BIT TO OPERAND A ( CARRY A: 0 CARRY B: 1 )

703, ,1,711 // RETURN BIT TO OPERAND A ( CARRY A: 1 CARRY B: 0 )

704, ,1,712 // RETURN BIT TO OPERAND A ( CARRY A: 1 CARRY B: 1 )

711,0,>,721 // MOVE RIGHT ( CARRY A: NIL CARRY B: 0 )
711,1,>,721

712,0,>,722 // MOVE RIGHT ( CARRY A: NIL CARRY B: 1 )
712,1,>,722

721,0, ,731 // READ BIT ( CARRY A: NIL CARRY B: 0 )
721,1, ,732

722,0, ,733 // READ BIT ( CARRY A: NIL CARRY B: 1 )
722,1, ,734

731, ,>,801 // MOVE RIGHT ( CARRY A: 0 CARRY B: 0 )

732, ,>,802 // MOVE RIGHT ( CARRY A: 1 CARRY B: 0 )

733, ,>,803 // MOVE RIGHT ( CARRY A: 0 CARRY B: 1 )

734, ,>,804 // MOVE RIGHT ( CARRY A: 1 CARRY B: 1 )

// HERE GOES S-CASE

721, ,>,1201 // WE'VE REACHED THE END OF OPERAND A!!! ( CARRY A: NIL CARRY B: 0 )


722, ,>,1202 // EXIT LOOP ( CARRY A: NIL CARRY B: 1 )

// ======================== ( 801 - 899 SKIP OPERAND A ) ======================== \\

801,0,>,801 // MOVE RIGHT ( CARRY A: 0 CARRY B: 0 )
801,1,>,801
801, ,>,901

802,0,>,802 // MOVE RIGHT ( CARRY A: 1 CARRY B: 0 )
802,1,>,802
802, ,>,902

803,0,>,803 // MOVE RIGHT ( CARRY A: 0 CARRY B: 1 )
803,1,>,803
803, ,>,903

804,0,>,804 // MOVE RIGHT ( CARRY A: 1 CARRY B: 1 )
804,1,>,804
804, ,>,904

// ======================== ( 901 - 999 SKIP OPERAND B LEFTOVERS, RETURN BIT TO B, GET NEXT BIT ) ======================== \\

901,0,>,901 // MOVE RIGHT OR RETURN BIT ( CARRY A: 0 CARRY B: 0 )
901,1,>,901
901, ,0,911

902,0,>,902 // MOVE RIGHT OR RETURN BIT ( CARRY A: 1 CARRY B: 0 )
902,1,>,902
902, ,0,912

903,0,>,903 // MOVE RIGHT OR RETURN BIT ( CARRY A: 0 CARRY B: 1 )
903,1,>,903
903, ,1,911

904,0,>,904 // MOVE RIGHT OR RETURN BIT ( CARRY A: 1 CARRY B: 1 )
904,1,>,904
904, ,1,912

911,0,>,921 // MOVE RIGHT AFTER RETURN OF THE BIT ( CARRY A: 0 CARRY B: NIL )
911,1,>,921

912,0,>,922 // MOVE RIGHT AFTER RETURN OF THE BIT ( CARRY A: 1 CARRY B: NIL )
912,1,>,922

921,0, ,931 // READ BIT ( CARRY A: 0 CARRY B: NIL )
921,1, ,932
921, ,>,1901 // S-CASE ( OPERAND A IS LONGER THAN OPERAND B )


922,0, ,933 // READ BIT ( CARRY A: 1 CARRY B: NIL )
922,1, ,934
922, ,>,1902 // S-CASE ( OPERAND A IS LONGER THAN OPERAND B )

931, ,>,1001 // MOVE RIGHT ( CARRY A: 0 CARRY B: 0 )

932, ,>,1002 // MOVE RIGHT ( CARRY A: 0 CARRY B: 1 )

933, ,>,1003 // MOVE RIGHT ( CARRY A: 1 CARRY B: 0 )

934, ,>,1004 // MOVE RIGHT ( CARRY A: 1 CARRY B: 1 )

// ======================== ( 1000 - 1099 SKIP OPERAND B LEFTOVERS ) ======================== \\

1001,0,>,1001 // MOVE RIGHT ( CARRY A: 0 CARRY B: 0 )
1001,1,>,1001
1001, ,>,1101

1002,0,>,1002 // MOVE RIGHT ( CARRY A: 0 CARRY B: 1 )
1002,1,>,1002
1002, ,>,1102

1003,0,>,1003 // MOVE RIGHT ( CARRY A: 1 CARRY B: 0 )
1003,1,>,1003
1003, ,>,1103

1004,0,>,1004 // MOVE RIGHT ( CARRY A: 1 CARRY B: 1 )
1004,1,>,1004
1004, ,>,1104

// ======================== ( 1100 - 1199 SKIP UNFINISHED RESULT, PASTE BIT AND RETURN TO 600-699 ) ======================== \\

1101,0,>,1111 // MOVE RIGHT ( CARRY A: 0 CARRY B: 0 )
1101,1,>,1111
1101, ,<,601 // ATTENTION! WE'VE REACHED THE END OF OUTPUT BUT, IN FACT THERE'S NO OUTPUT! IGNORING...


1102,0,>,1102 // MOVE RIGHT ( CARRY A: 0 CARRY B: 1 )
1102,1,>,1102
1102, ,1,602

1103,0,>,1103 // MOVE RIGHT ( CARRY A: 1 CARRY B: 0 )
1103,1,>,1103
1103, ,1,603

1104,0,>,1104 // MOVE RIGHT ( CARRY A: 1 CARRY B: 1 )
1104,1,>,1104
1104, ,1,604

1111,0,>,1111 // S-CASE, WE CAN PRINT 0! ( CARRY A: 0 CARRY B: 0 )
1111,1,>,1111
1111, ,0,601

// ======================== ( 1200 - 1299 EXIT LOOP ) ======================== \\

1201,0,>,1201 // MOVE RIGHT OR RETURN BIT ( CARRY A: NIL CARRY B: 0 )
1201,1,>,1201
1201, ,0,1211

1202,0,>,1202 // MOVE RIGHT OR RETURN BIT ( CARRY A: NIL CARRY B: 1 )
1202,1,>,1202
1202, ,1,1211

1211,0,>,1212 // SKIP PASTED BIT ( CARRY A: NIL CARRY B: NIL )
1211,1,>,1212

1212,0, ,1222 // READ BIT FROM OPERAND B ( CARRY A: NIL CARRY B: NIL )
1212,1, ,1223 // READ BIT FROM OPERAND B ( CARRY A: NIL CARRY B: NIL )
1212, ,>,1213 // THE END

1222, ,>,1801 // MOVE RIGHT ( CARRY B: 0 )
1223, ,>,1802 // MOVE RIGHT ( CARRY B: 1 )

1213, ,0,1214 // MOVE TO THE END OF OUTPUT ( IRRELEVANT ) IF OUTPUT IS NIL, PASTE 0 AND FINISH
1213,1,>,1215
1213,0,>,1215

1214,0,>,1299

1215,0,>,1215 // MOVE TO THE END OF OUTPUT ( IRRELEVANT ) 
1215,1,>,1215
1215, , ,1299

1299, ,#,1299 // HALT ( IRRELEVANT )

// ======================== ( 1800 - 1899 S-CASE OPERAND B > OPERAND A ) ======================== \\

1801,0,>,1801 // SKIP OPERAND B ( CARRY B: 0 )
1801,1,>,1801
1801, ,>,1811 

1802,0,>,1802 // SKIP OPERAND B ( CARRY B: 1 )
1802,1,>,1802
1802, ,>,1812

1811,0,>,1891 // TEST FOR LEADING 0
1811,1,>,1891 // TEST FOR LEADING 0
1811, ,<,1893

1893, ,<,1841

1891,0,>,1891 // SKIP UNFINISHED RESULT OR PAST BIT ( CARRY B: 0 )
1891,1,>,1891
1891, ,0,1831 

1812,0,>,1812 // SKIP UNFINISHED RESULT OR PAST BIT ( CARRY B: 1 )
1812,1,>,1812
1812, ,1,1832 

1831,0,<,1831 // GO TO THE START OF UNFINISHED RESULT ( CARRY B: 0 )
1831,1,<,1831
1831, ,<,1841

1832,0,<,1832 // GO TO THE START OF UNFINISHED RESULT ( CARRY B: 1 )
1832,1,<,1832
1832, ,<,1842

1841,0,<,1841 // GO TO THE WHITESPACE INSIDE OPERAND B ( CARRY B: 0 )
1841,1,<,1841
1841, ,0,1861

1842,0,<,1842 // GO TO THE WHITESPACE INSIDE OPERAND B ( CARRY B: 1 )
1842,1,<,1842
1842, ,1,1861

1861,0,>,1862 // GO TO THE NEXT BIT ( CARRY B: NIL )
1861,1,>,1862

1862,0, ,1863 // PICK BIT ( CARRY B: NIL )
1862,1, ,1864 // PICK BIT ( CARRY B: NIL )

1863, ,>,1801
1864, ,>,1802

1862, ,>,1213 // WE'VE HOPEFULY REACHED THE END OF OPERAND B


// ======================== ( 1900 - 1999 S-CASE OPERAND B > OPERAND A ) ======================== \\

1901,0,>,1994 // TEST FOR LEADING 0 ( CARRY A: 0 )
1901,1,>,1994
1901, ,<,1995

1995, ,<,1941 // SKIP WHITESPACE ( CARRY A: 0 )

1994,0,>,1994  // SKIP UNFINISHED RESULT OR PAST BIT ( CARRY A: 0 )
1994,1,>,1994 
1994, ,0,1931 

1902,0,>,1902 // SKIP UNFINISHED RESULT OR PAST BIT ( CARRY A: 1 )
1902,1,>,1902
1902, ,1,1932 

1931,0,<,1931 // GO TO THE START OF UNFINISHED RESULT ( CARRY A: 0 )
1931,1,<,1931
1931, ,<,1941

1932,0,<,1932 // GO TO THE START OF UNFINISHED RESULT ( CARRY A: 1 )
1932,1,<,1932
1932, ,<,1942


1941,0,<,1941 // SKIP OPERAND B ( CARRY A: 0 )
1941,1,<,1941
1941, ,<,1961

1942,0,<,1942 // SKIP OPERAND B ( CARRY A: 1 )
1942,1,<,1942
1942, ,<,1962


1961,0,<,1961 // SKIP 'TIL OPERAND A WHITESPACE ( CARRY A: 0 )
1961,1,<,1961
1961, ,0,1971

1962,0,<,1962 // SKIP 'TIL OPERAND A WHITESPACE ( CARRY A: 1 )
1962,1,<,1962
1962, ,1,1971

1971,0,>,1972 // GO TO THE NEXT BIT ( CARRY A: NIL )
1971,1,>,1972

1972,0, ,1973 // READ BIT ( CARRY A: NIL )
1972,1, ,1974 // READ BIT ( CARRY A: NIL )

1972, ,>,1993 // BLACK OCTOBER

1973, ,>,1981 // GO TO THE NEXT BIT ( CARRY A: 0 )
1974, ,>,1982 // GO TO THE NEXT BIT ( CARRY A: 1 )

1981,0,>,1981 // SKIP OPERAND A ( CARRY A: 0 )
1981,1,>,1981
1981, ,>,1991 // COLLAPSE OF THE U.S.S.R

1982,0,>,1982 // SKIP OPERAND A ( CARRY A: 1 )
1982,1,>,1982
1982, ,>,1992

1991,0,>,1991 // COLLAPSE OF THE U.S.S.R ( CARRY A: 0 )
1991,1,>,1991
1991, ,>,1901

1992,0,>,1992 // SKIP OPERAND B ( CARRY A: 1 )
1992,1,>,1992
1992, ,>,1902

1993,0,>,1993 // BLACK OCTOBER ( CARRY A: NIL )
1993,1,>,1993
1993, ,>,1213

// --- SISP --- \\
